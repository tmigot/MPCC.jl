var documenterSearchIndex = {"docs":
[{"location":"91-developer/#dev_docs","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"note: Contributing guidelines\nIf you haven't, please read the Contributing guidelines first.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If you want to make contributions to this package that involves code, then this guide is for you.","category":"page"},{"location":"91-developer/#First-time-clone","page":"Developer documentation","title":"First time clone","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: If you have writing rights\nIf you have writing rights, you don't have to fork. Instead, simply clone and skip ahead. Whenever upstream is mentioned, use origin instead.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If this is the first time you work with this repository, follow the instructions below to clone the repository.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fork this repo\nClone your repo (this will create a git remote called origin)\nAdd this repo as a remote:\ngit remote add upstream https://github.com/tmigot/MPCC.jl","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"This will ensure that you have two remotes in your git: origin and upstream. You will create branches and push to origin, and you will fetch and update your local main branch from upstream.","category":"page"},{"location":"91-developer/#Linting-and-formatting","page":"Developer documentation","title":"Linting and formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Install a plugin on your editor to use EditorConfig. This will ensure that your editor is configured with important formatting settings.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We use https://pre-commit.com to run the linters and formatters. In particular, the Julia code is formatted using JuliaFormatter.jl, so please install it globally first:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # Press ]\npkg> activate\npkg> add JuliaFormatter","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To install pre-commit, we recommend using pipx as follows:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"# Install pipx following the link\npipx install pre-commit","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/#Testing","page":"Developer documentation","title":"Testing","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"As with most Julia packages, you can just open Julia in the repository folder, activate the environment, and run test:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"julia> # press ]\npkg> activate .\npkg> test","category":"page"},{"location":"91-developer/#Working-on-a-new-issue","page":"Developer documentation","title":"Working on a new issue","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"We try to keep a linear history in this repo, so it is important to keep your branches up-to-date.","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Fetch from the remote and fast-forward your local main\ngit fetch upstream\ngit switch main\ngit merge --ff-only upstream/main\nBranch from main to address the issue (see below for naming)\ngit switch -c 42-add-answer-universe\nPush the new local branch to your personal remote repository\ngit push -u origin 42-add-answer-universe\nCreate a pull request to merge your remote branch into the org main.","category":"page"},{"location":"91-developer/#Branch-naming","page":"Developer documentation","title":"Branch naming","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"If there is an associated issue, add the issue number.\nIf there is no associated issue, and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.\nUse dash separated imperative wording related to the issue (e.g., 14-add-tests, 15-fix-model, 16-remove-obsolete-files).","category":"page"},{"location":"91-developer/#Commit-message","page":"Developer documentation","title":"Commit message","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Use imperative or present tense, for instance: Add feature or Fix bug.\nHave informative titles.\nWhen necessary, add a body with details.\nIf there are breaking changes, add the information to the commit message.","category":"page"},{"location":"91-developer/#Before-creating-a-pull-request","page":"Developer documentation","title":"Before creating a pull request","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"tip: Atomic git commits\nTry to create \"atomic git commits\" (recommended reading: The Utopic Git History).","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Make sure the tests pass.\nMake sure the pre-commit tests pass.\nFetch any main updates from upstream and rebase your branch, if necessary:\ngit fetch upstream\ngit rebase upstream/main BRANCH_NAME\nThen you can open a pull request and work with the reviewer to address any issues.","category":"page"},{"location":"91-developer/#Building-and-viewing-the-documentation-locally","page":"Developer documentation","title":"Building and viewing the documentation locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Following the latest suggestions, we recommend using LiveServer to build the documentation. Here is how you do it:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Run julia --project=docs to open Julia in the environment of the docs.\nIf this is the first time building the docs\nPress ] to enter pkg mode\nRun pkg> dev . to use the development version of your package\nPress backspace to leave pkg mode\nRun julia> using LiveServer\nRun julia> servedocs()","category":"page"},{"location":"91-developer/#Making-a-new-release","page":"Developer documentation","title":"Making a new release","text":"","category":"section"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"To create a new release, you can follow these simple steps:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Create a branch release-x.y.z\nUpdate version in Project.toml\nUpdate the CHANGELOG.md:\nRename the section \"Unreleased\" to \"[x.y.z] - yyyy-mm-dd\" (i.e., version under brackets, dash, and date in ISO format)\nAdd a new section on top of it named \"Unreleased\"\nAdd a new link in the bottom for version \"x.y.z\"\nChange the \"[unreleased]\" link to use the latest version - end of line, vx.y.z ... HEAD.\nCreate a commit \"Release vx.y.z\", push, create a PR, wait for it to pass, merge the PR.\nGo back to main screen and click on the latest commit (link: https://github.com/tmigot/MPCC.jl/commit/main)\nAt the bottom, write @JuliaRegistrator register","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"After that, you only need to wait and verify:","category":"page"},{"location":"91-developer/","page":"Developer documentation","title":"Developer documentation","text":"Wait for the bot to comment (should take < 1m) with a link to a RP to the registry\nFollow the link and wait for a comment on the auto-merge\nThe comment should said all is well and auto-merge should occur shortly\nAfter the merge happens, TagBot will trigger and create a new GitHub tag. Check on https://github.com/tmigot/MPCC.jl/releases\nAfter the release is create, a \"docs\" GitHub action will start for the tag.\nAfter it passes, a deploy action will run.\nAfter that runs, the stable docs should be updated. Check them and look for the version number.","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [MPCC]","category":"page"},{"location":"95-reference/#MPCC.AbstractMPCCModel","page":"Reference","title":"MPCC.AbstractMPCCModel","text":"Base type for an optimization model with degenerate constraints.\n\nmin f(x)\nl <= x <= u\nlb <= c(x) <= ub\n0 <= G(x) _|_ H(x) >= 0\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#MPCC.MPCCCounters","page":"Reference","title":"MPCC.MPCCCounters","text":"MPCCCounters\n\nInitialization: MPCCCounters()\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#MPCC.MPCCModelMeta","page":"Reference","title":"MPCC.MPCCModelMeta","text":"A composite type that represents the main features of the optimization problem\n\noptimize   obj(x)   subject to lvar ≤    x    ≤ uvar              lcon ≤ cons(x) ≤ ucon              lcc  ≤ G(x) | H(x) >= ucc\n\nwhere x        is an nvar-dimensional vector,        obj      is the real-valued objective function,        cons     is the vector-valued constraint function,        optimize is either \"minimize\" or \"maximize\".\n\nHere, lvar, uvar, lcon and ucon are vectors. Some of their  components may be infinite to indicate that the corresponding  bound or general constraint is not present.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#MPCC.NLMPCC","page":"Reference","title":"MPCC.NLMPCC","text":"Convert an MPCCModel to an NLPModels as follows. Definit le type NLMPCC : min \tf(x) s.t. \tl <= x <= u \tlcon(tb) <= cnl(x) <= ucon\n\nwith\n\ncnl(x) := c(x),G(x),H(x),G(x).*H(x)\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#LinearOperators.reset!-Tuple{AbstractMPCCModel}","page":"Reference","title":"LinearOperators.reset!","text":"reset!(nlp)\n\nReset evaluation count in nlp\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#LinearOperators.reset!-Tuple{MPCCCounters}","page":"Reference","title":"LinearOperators.reset!","text":"reset!(counters)\n\nReset evaluation counters\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.complementarity_constrained-Tuple{MPCCModelMeta}","page":"Reference","title":"MPCC.complementarity_constrained","text":"complementarity_constrained(nlp)\ncomplementarity_constrained(meta)\n\nReturns whether the problem's constraints are all inequalities. Unconstrained problems return true.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consG!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.consG!","text":"c = consG(nlp, x, c)\n\nEvaluate the constraints of consG at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consG!-Tuple{MPCCNLPs, Vector, AbstractVector}","page":"Reference","title":"MPCC.consG!","text":"Evaluate G(x), the constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consG-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consG","text":"c = consG(nlp, x, c)\n\nEvaluate the constraints of consG at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consG_lin!","page":"Reference","title":"MPCC.consG_lin!","text":"c = consG_lin!(nlp, x, c)\n\nEvaluate the linear constraints at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.consG_lin-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consG_lin","text":"c = consG_lin(nlp, x, c)\n\nEvaluate the linear constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consG_nln!","page":"Reference","title":"MPCC.consG_nln!","text":"c = consG_nln!(nlp, x, c)\n\nEvaluate the nonlinear constraints at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.consG_nln-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consG_nln","text":"c = consG_nln(nlp, x, c)\n\nEvaluate the nonlinear constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consH!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.consH!","text":"c = consH(nlp, x, c)\n\nEvaluate the constraints of consH at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consH!-Tuple{MPCCNLPs, Vector, AbstractVector}","page":"Reference","title":"MPCC.consH!","text":"Evaluate H(x), the constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consH-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consH","text":"c = consH(nlp, x, c)\n\nEvaluate the constraints of consH at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consH_lin!","page":"Reference","title":"MPCC.consH_lin!","text":"c = consH_lin!(nlp, x, c)\n\nEvaluate the linear constraints at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.consH_lin-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consH_lin","text":"c = consH_lin(nlp, x, c)\n\nEvaluate the linear constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.consH_nln!","page":"Reference","title":"MPCC.consH_nln!","text":"c = consH_nln!(nlp, x, c)\n\nEvaluate the nonlinear constraints at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.consH_nln-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.consH_nln","text":"c = consH_nln(nlp, x, c)\n\nEvaluate the nonlinear constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.decrement_cc!-Tuple{AbstractMPCCModel, Symbol}","page":"Reference","title":"MPCC.decrement_cc!","text":"decrement!(nlp, s)\n\nDecrement counter s of problem nlp.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hGprod!","page":"Reference","title":"MPCC.hGprod!","text":"Hv = hGprod!(nlp, x, y, v, Hv)\n\nEvaluate the product of the Lagrangian Hessian at (x,y) with the vector v in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hGprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hGprod","text":"Hv = hGprod(nlp, x, y, v)\n\nEvaluate the product of the Lagrangian Hessian at (x,y) with the vector v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hHprod!","page":"Reference","title":"MPCC.hHprod!","text":"Hv = hHprod!(nlp, x, y, v, Hv)\n\nEvaluate the product of the Lagrangian Hessian at (x,y) with the vector v in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hHprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hHprod","text":"Hv = hHprod(nlp, x, y, v)\n\nEvaluate the product of the Lagrangian Hessian at (x,y) with the vector v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessG-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessG","text":"Hx = hessG(nlp, x, y)\n\nEvaluate the Lagrangian Hessian at (x,y) as a sparse matrix. A Symmetric object wrapping the lower triangle is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessG_coord!","page":"Reference","title":"MPCC.hessG_coord!","text":"vals = hessG_coord!(nlp, x, y, vals)\n\nEvaluate the Lagrangian Hessian at (x,y) in sparse coordinate format, overwriting vals. Only the lower triangle is returned.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hessG_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessG_coord","text":"vals = hessG_coord(nlp, x, y)\n\nEvaluate the Lagrangian Hessian at (x,y) in sparse coordinate format. Only the lower triangle is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessG_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessG_op!","text":"H = hessG_op!(nlp, x, y, Hv)\n\nReturn the Lagrangian Hessian at (x,y) with objective function scaled by obj_weight as a linear operator, and storing the result on Hv. The resulting object may be used as if it were a matrix, e.g., w = H * v. The vector Hv is used as preallocated storage for the operation.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessG_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessG_op","text":"H = hessG_op(nlp, x, y)\n\nReturn the Lagrangian Hessian at (x,y) as a linear operator. The resulting object may be used as if it were a matrix, e.g., H * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessG_structure!","page":"Reference","title":"MPCC.hessG_structure!","text":"hessG_structure!(nlp, rows, cols)\n\nReturn the structure of the Lagrangian Hessian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hessG_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.hessG_structure","text":"(rows,cols) = hessG_structure(nlp)\n\nReturn the structure of the Lagrangian Hessian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessH-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessH","text":"Hx = hessH(nlp, x, y)\n\nEvaluate the Lagrangian Hessian at (x,y) as a sparse matrix. A Symmetric object wrapping the lower triangle is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessH_coord!","page":"Reference","title":"MPCC.hessH_coord!","text":"vals = hessH_coord!(nlp, x, y, vals)\n\nEvaluate the Lagrangian Hessian at (x,y) in sparse coordinate format, overwriting vals. Only the lower triangle is returned.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hessH_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessH_coord","text":"vals = hessH_coord(nlp, x, y)\n\nEvaluate the Lagrangian Hessian at (x,y) in sparse coordinate format. Only the lower triangle is returned.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessH_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessH_op!","text":"H = hessH_op!(nlp, x, y, Hv)\n\nReturn the Lagrangian Hessian at (x,y) with objective function scaled by obj_weight as a linear operator, and storing the result on Hv. The resulting object may be used as if it were a matrix, e.g., w = H * v. The vector Hv is used as preallocated storage for the operation.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessH_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.hessH_op","text":"H = hessH_op(nlp, x, y)\n\nReturn the Lagrangian Hessian at (x,y) as a linear operator. The resulting object may be used as if it were a matrix, e.g., H * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.hessH_structure!","page":"Reference","title":"MPCC.hessH_structure!","text":"hessH_structure!(nlp, rows, cols)\n\nReturn the structure of the Lagrangian Hessian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.hessH_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.hessH_structure","text":"(rows,cols) = hessH_structure(nlp)\n\nReturn the structure of the Lagrangian Hessian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.increment_cc!-Tuple{AbstractMPCCModel, Symbol}","page":"Reference","title":"MPCC.increment_cc!","text":"increment_cc!(nlp, s)\n\nIncrement counter s of problem nlp.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jG_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jG_op!","text":"J = jG_op!(nlp, x, Jv, Jtv)\n\nReturn the Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGprod!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jGprod!","text":"Jv = jGprod!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGprod!-Tuple{MPCCNLPs, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jGprod!","text":"JGv = jGprod!(nlp, x, v, Jv) Evaluate G(x)v, the Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGprod","text":"Jv = jGprod(nlp, x, v)\n\nEvaluate J(x)v, the Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGprodlin!","page":"Reference","title":"MPCC.jGprodlin!","text":"Jv = jGprodlin!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the linear Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jGprodlin-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGprodlin","text":"Jv = jGprodlin(nlp, x, v)\n\nEvaluate J(x)v, the linear Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGprodnln!","page":"Reference","title":"MPCC.jGprodnln!","text":"Jv = jGprodnln!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the nonlinear Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jGprodnln-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGprodnln","text":"Jv = jGprodnln(nlp, x, v)\n\nEvaluate J(x)v, the nonlinear Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGtprod!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jGtprod!","text":"Jtv = jGtprod!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the transposed-Jacobian-vector product at x in place. If the problem has linear and nonlinear constraints, this function allocates.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGtprod!-Tuple{MPCCNLPs, Vector, Vector, Vector}","page":"Reference","title":"MPCC.jGtprod!","text":"Jtv = jtprodG(nlp, x, v, Jtv)\n\nEvaluate G(x)^Tv, the transposed-Jacobian-vector product at x\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGtprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGtprod","text":"Jtv = jGtprod(nlp, x, v)\n\nEvaluate J(x)^Tv, the transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGtprodlin!","page":"Reference","title":"MPCC.jGtprodlin!","text":"Jtv = jGtprodlin!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the linear transposed-Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jGtprodlin-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGtprodlin","text":"Jtv = jGtprodlin(nlp, x, v)\n\nEvaluate J(x)^Tv, the linear transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jGtprodnln!","page":"Reference","title":"MPCC.jGtprodnln!","text":"Jtv = jGtprodnln!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the nonlinear transposed-Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jGtprodnln-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jGtprodnln","text":"Jtv = jGtprodnln(nlp, x, v)\n\nEvaluate J(x)^Tv, the nonlinear transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jH_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jH_op!","text":"J = jH_op!(nlp, x, Jv, Jtv)\n\nReturn the Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHprod!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jHprod!","text":"Jv = jHprod!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHprod!-Tuple{MPCCNLPs, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jHprod!","text":"JHv = jHprod!(nlp, x, v, Jv) Evaluate H(x)v, the Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHprod","text":"Jv = jHprod(nlp, x, v)\n\nEvaluate J(x)v, the Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHprodlin!","page":"Reference","title":"MPCC.jHprodlin!","text":"Jv = jHprodlin!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the linear Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jHprodlin-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHprodlin","text":"Jv = jHprodlin(nlp, x, v)\n\nEvaluate J(x)v, the linear Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHprodnln!","page":"Reference","title":"MPCC.jHprodnln!","text":"Jv = jHprodnln!(nlp, x, v, Jv)\n\nEvaluate J(x)v, the nonlinear Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jHprodnln-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHprodnln","text":"Jv = jHprodnln(nlp, x, v)\n\nEvaluate J(x)v, the nonlinear Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHtprod!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jHtprod!","text":"Jtv = jHtprod!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the transposed-Jacobian-vector product at x in place. If the problem has linear and nonlinear constraints, this function allocates.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHtprod!-Tuple{MPCCNLPs, Vector, Vector, Vector}","page":"Reference","title":"MPCC.jHtprod!","text":"Jtv = jtprodH(nlp, x, v, Jtv)\n\nEvaluate H(x)^Tv, the transposed-Jacobian-vector product at x\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHtprod-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHtprod","text":"Jtv = jHtprod(nlp, x, v)\n\nEvaluate J(x)^Tv, the transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHtprodlin!","page":"Reference","title":"MPCC.jHtprodlin!","text":"Jtv = jHtprodlin!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the linear transposed-Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jHtprodlin-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHtprodlin","text":"Jtv = jHtprodlin(nlp, x, v)\n\nEvaluate J(x)^Tv, the linear transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jHtprodnln!","page":"Reference","title":"MPCC.jHtprodnln!","text":"Jtv = jHtprodnln!(nlp, x, v, Jtv)\n\nEvaluate J(x)^Tv, the nonlinear transposed-Jacobian-vector product at x in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jHtprodnln-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jHtprodnln","text":"Jtv = jHtprodnln(nlp, x, v)\n\nEvaluate J(x)^Tv, the nonlinear transposed-Jacobian-vector product at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.jacG","text":"Jx = jacG(nlp, x)\n\nEvaluate J(x), the constraints Jacobian at x as a sparse matrix.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_coord!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jacG_coord!","text":"vals = jacG_coord!(nlp, x, vals)\n\nEvaluate J(x), the constraints Jacobian at x in sparse coordinate format, rewriting vals.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_coord","text":"vals = jacG_coord(nlp, x)\n\nEvaluate J(x), the constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_lin_coord!","page":"Reference","title":"MPCC.jacG_lin_coord!","text":"vals = jacG_lin_coord!(nlp, x, vals)\n\nEvaluate J(x), the linear constraints Jacobian at x in sparse coordinate format, overwriting vals.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacG_lin_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_lin_coord","text":"vals = jacG_lin_coord(nlp, x)\n\nEvaluate J(x), the linear constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_lin_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_lin_op!","text":"J = jacG_lin_op!(nlp, x, Jv, Jtv)\n\nReturn the linear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_lin_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_lin_op","text":"J = jacG_lin_op(nlp, x)\n\nReturn the linear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_lin_structure!","page":"Reference","title":"MPCC.jacG_lin_structure!","text":"jacG_lin_structure!(nlp, rows, cols)\n\nReturn the structure of the linear constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacG_lin_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacG_lin_structure","text":"(rows,cols) = jacG_lin_structure(nlp)\n\nReturn the structure of the linear constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_nln_coord!","page":"Reference","title":"MPCC.jacG_nln_coord!","text":"vals = jacG_nln_coord!(nlp, x, vals)\n\nEvaluate J(x), the nonlinear constraints Jacobian at x in sparse coordinate format, overwriting vals.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacG_nln_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_nln_coord","text":"vals = jacG_nln_coord(nlp, x)\n\nEvaluate J(x), the nonlinear constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_nln_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_nln_op!","text":"J = jacG_nln_op!(nlp, x, Jv, Jtv)\n\nReturn the nonlinear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_nln_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_nln_op","text":"J = jacG_nln_op(nlp, x)\n\nReturn the nonlinear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_nln_structure!","page":"Reference","title":"MPCC.jacG_nln_structure!","text":"jacG_nln_structure!(nlp, rows, cols)\n\nReturn the structure of the nonlinear constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacG_nln_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacG_nln_structure","text":"(rows,cols) = jacG_nln_structure(nlp)\n\nReturn the structure of the nonlinear constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacG_op","text":"J = jacG_op(nlp, x)\n\nReturn the Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_structure!-Union{Tuple{T}, Tuple{AbstractMPCCModel, AbstractVector{T}, AbstractVector{T}}} where T","page":"Reference","title":"MPCC.jacG_structure!","text":"jacG_structure!(nlp, rows, cols)\n\nReturn the structure of the constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacG_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacG_structure","text":"(rows,cols) = jacG_structure(nlp)\n\nReturn the structure of the constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.jacH","text":"Jx = jacH(nlp, x)\n\nEvaluate J(x), the constraints Jacobian at x as a sparse matrix.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_coord!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.jacH_coord!","text":"vals = jacH_coord!(nlp, x, vals)\n\nEvaluate J(x), the constraints Jacobian at x in sparse coordinate format, rewriting vals.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_coord","text":"vals = jacH_coord(nlp, x)\n\nEvaluate J(x), the constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_lin_coord!","page":"Reference","title":"MPCC.jacH_lin_coord!","text":"vals = jacH_lin_coord!(nlp, x, vals)\n\nEvaluate J(x), the linear constraints Jacobian at x in sparse coordinate format, overwriting vals.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacH_lin_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_lin_coord","text":"vals = jacH_lin_coord(nlp, x)\n\nEvaluate J(x), the linear constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_lin_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_lin_op!","text":"J = jacH_lin_op!(nlp, x, Jv, Jtv)\n\nReturn the linear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_lin_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_lin_op","text":"J = jacH_lin_op(nlp, x)\n\nReturn the linear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_lin_structure!","page":"Reference","title":"MPCC.jacH_lin_structure!","text":"jacH_lin_structure!(nlp, rows, cols)\n\nReturn the structure of the linear constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacH_lin_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacH_lin_structure","text":"(rows,cols) = jacH_lin_structure(nlp)\n\nReturn the structure of the linear constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_nln_coord!","page":"Reference","title":"MPCC.jacH_nln_coord!","text":"vals = jacH_nln_coord!(nlp, x, vals)\n\nEvaluate J(x), the nonlinear constraints Jacobian at x in sparse coordinate format, overwriting vals.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacH_nln_coord-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_nln_coord","text":"vals = jacH_nln_coord(nlp, x)\n\nEvaluate J(x), the nonlinear constraints Jacobian at x in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_nln_op!-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector{T}, AbstractVector, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_nln_op!","text":"J = jacH_nln_op!(nlp, x, Jv, Jtv)\n\nReturn the nonlinear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v. The values Jv and Jtv are used as preallocated storage for the operations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_nln_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_nln_op","text":"J = jacH_nln_op(nlp, x)\n\nReturn the nonlinear Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_nln_structure!","page":"Reference","title":"MPCC.jacH_nln_structure!","text":"jacH_nln_structure!(nlp, rows, cols)\n\nReturn the structure of the nonlinear constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#MPCC.jacH_nln_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacH_nln_structure","text":"(rows,cols) = jacH_nln_structure(nlp)\n\nReturn the structure of the nonlinear constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_op-Union{Tuple{S}, Tuple{T}, Tuple{AbstractMPCCModel{T, S}, AbstractVector}} where {T, S}","page":"Reference","title":"MPCC.jacH_op","text":"J = jacH_op(nlp, x)\n\nReturn the Jacobian at x as a linear operator. The resulting object may be used as if it were a matrix, e.g., J * v or J' * v.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_structure!-Union{Tuple{T}, Tuple{AbstractMPCCModel, AbstractVector{T}, AbstractVector{T}}} where T","page":"Reference","title":"MPCC.jacH_structure!","text":"jacH_structure!(nlp, rows, cols)\n\nReturn the structure of the constraints Jacobian in sparse coordinate format in place.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.jacH_structure-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.jacH_structure","text":"(rows,cols) = jacH_structure(nlp)\n\nReturn the structure of the constraints Jacobian in sparse coordinate format.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consG-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consG","text":"neval_consG(nlp)\n\nGet the number of consG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consG_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consG_lin","text":"neval_consG_lin(nlp)\n\nGet the number of consG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consG_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consG_nln","text":"neval_consG_nln(nlp)\n\nGet the number of consG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consH-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consH","text":"neval_consH(nlp)\n\nGet the number of consH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consH_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consH_lin","text":"neval_consH_lin(nlp)\n\nGet the number of consH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_consH_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_consH_nln","text":"neval_consH_nln(nlp)\n\nGet the number of consH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_hGprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_hGprod","text":"neval_hGprod(nlp)\n\nGet the number of hGprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_hHprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_hHprod","text":"neval_hHprod(nlp)\n\nGet the number of hHprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_hessG-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_hessG","text":"neval_hessG(nlp)\n\nGet the number of hessG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_hessH-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_hessH","text":"neval_hessH(nlp)\n\nGet the number of hessH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGprod","text":"neval_jGprod(nlp)\n\nGet the number of jGprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGprod_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGprod_lin","text":"neval_jGprod_lin(nlp)\n\nGet the number of jGprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGprod_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGprod_nln","text":"neval_jGprod_nln(nlp)\n\nGet the number of jGprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGtprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGtprod","text":"neval_jGtprod(nlp)\n\nGet the number of jGtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGtprod_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGtprod_lin","text":"neval_jGtprod_lin(nlp)\n\nGet the number of jGtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jGtprod_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jGtprod_nln","text":"neval_jGtprod_nln(nlp)\n\nGet the number of jGtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHprod","text":"neval_jHprod(nlp)\n\nGet the number of jHprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHprod_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHprod_lin","text":"neval_jHprod_lin(nlp)\n\nGet the number of jHprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHprod_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHprod_nln","text":"neval_jHprod_nln(nlp)\n\nGet the number of jHprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHtprod-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHtprod","text":"neval_jHtprod(nlp)\n\nGet the number of jHtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHtprod_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHtprod_lin","text":"neval_jHtprod_lin(nlp)\n\nGet the number of jHtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jHtprod_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jHtprod_nln","text":"neval_jHtprod_nln(nlp)\n\nGet the number of jHtprod evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacG-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacG","text":"neval_jacG(nlp)\n\nGet the number of jacG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacG_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacG_lin","text":"neval_jacG_lin(nlp)\n\nGet the number of jacG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacG_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacG_nln","text":"neval_jacG_nln(nlp)\n\nGet the number of jacG evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacH-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacH","text":"neval_jacH(nlp)\n\nGet the number of jacH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacH_lin-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacH_lin","text":"neval_jacH_lin(nlp)\n\nGet the number of jacH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.neval_jacH_nln-Tuple{AbstractMPCCModel}","page":"Reference","title":"MPCC.neval_jacH_nln","text":"neval_jacH_nln(nlp)\n\nGet the number of jacH evaluations.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.viol!-Tuple{AbstractMPCCModel, AbstractVector, AbstractVector}","page":"Reference","title":"MPCC.viol!","text":"c = viol!(nlp, x, c)\nReturn the vector of the constraints\nlx <= x <= ux\nlc <= c(x) <= uc,\nlccG <= G(x),\nlccH <= H(x),\nG(x) .* H(x) <= 0\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.viol-Tuple{AbstractMPCCModel, AbstractVector}","page":"Reference","title":"MPCC.viol","text":"c = viol(nlp, x)\n\nEvaluate c(x), the constraints at x.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#MPCC.viol-Tuple{NLMPCC, AbstractVector}","page":"Reference","title":"MPCC.viol","text":"Return the violation of the constraints lb <= x <= ub, lc <= c(x) <= uc, lccG <= G(x), lccH <= H(x), G(x).*H(x) <= 0.\n\n\n\n\n\n","category":"method"},{"location":"90-contributing/#contributing","page":"Contributing guidelines","title":"Contributing guidelines","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"First of all, thanks for the interest!","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"We welcome all kinds of contribution, including, but not limited to code, documentation, examples, configuration, issue creating, etc.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"Be polite and respectful, and follow the code of conduct.","category":"page"},{"location":"90-contributing/#Bug-reports-and-discussions","page":"Contributing guidelines","title":"Bug reports and discussions","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, start an issue or a discussion on the topic, please.","category":"page"},{"location":"90-contributing/#Working-on-an-issue","page":"Contributing guidelines","title":"Working on an issue","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If you found an issue that interests you, comment on that issue what your plans are. If the solution to the issue is clear, you can immediately create a pull request (see below). Otherwise, say what your proposed solution is and wait for a discussion around it.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"tip: Tip\nFeel free to ping us after a few days if there are no responses.","category":"page"},{"location":"90-contributing/","page":"Contributing guidelines","title":"Contributing guidelines","text":"If your solution involves code (or something that requires running the package locally), check the developer documentation. Otherwise, you can use the GitHub interface directly to create your pull request.","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"CurrentModule = MPCC","category":"page"},{"location":"#MPCC","page":"MPCC","title":"MPCC","text":"","category":"section"},{"location":"","page":"MPCC","title":"MPCC","text":"Documentation for MPCC.","category":"page"},{"location":"#MPCC:-Optimization-Models-with-Complementarity-Constraints","page":"MPCC","title":"MPCC: Optimization Models with Complementarity Constraints","text":"","category":"section"},{"location":"","page":"MPCC","title":"MPCC","text":"Set of tools to model nonlinear continuous optimization model","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    min f(x) text st  l  c(x)  u","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"extended with complementarity constraints:","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    G(x)  0 H(x)  0 G(x)  H(x)  0","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"The resulting model is called an MPCC.","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"This package also handles vanishing constraints (MPVC)","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    H(x)  0 G(x)  H(x)  0","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"kink constraints","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    H(x)  0 G(x)  H(x) = 0","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"and switching constraints","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    G(x)  H(x) = 0","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"Denote ∘ the componentwise product of two vectors.","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"This package extends the NLPModel API defined in NLPModels.jl. The role of NLPModels.jl is to define an API that users and solvers can rely on.","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"The package contains the basic tools to use the Stopping framework, and exports an MPCCStopping.","category":"page"},{"location":"#Installation","page":"MPCC","title":"Installation","text":"","category":"section"},{"location":"","page":"MPCC","title":"MPCC","text":"] add MPCC","category":"page"},{"location":"#Example","page":"MPCC","title":"Example","text":"","category":"section"},{"location":"","page":"MPCC","title":"MPCC","text":"The simplest way to define an MPCCModel uses automatic differentiation:","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"using MPCC\nf(x) = sum(x) # objective function\nx0 = ones(6)\nG(x) = [x[1]; x[3]]\nH(x) = [x[2]; x[4]]\nlccg, lcch = zeros(2), zeros(2)\nlvar, uvar = fill(-10.0, size(x0)), fill(10.0, size(x0))\nadmpcc = ADMPCCModel(G, H, lccg, lcch, f, x0, lvar, uvar)","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"The resulting is an instance of an AbstractMPCCModel with all capabilities of an AbstractNLPModel such as","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"x = rand(6)\ngrad(admpcc, x) # returns the gradient of the objective function\nneval_grad(admpcc) # returns the number of evaluation of grad\nreset!(admpcc) # reset the internal counter","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"but also exports functions to deal with complementarity constraints","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"x = rand(6)\n(consG(admpcc, x), consH(admpcc, x))","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"but also jac_G_structure, jac_H_structure, jac_G_coord, jac_H_coord, jGprod, jHprod, jGtprod, jHtprod, hGprod, hHprod.","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"It also possible to convert the problem as a classical nonlinear optimization model treating the complementarity constraint as a nonlinear inequalities","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"    H(x)  0 G(x)  0 G(x)  H(x)  0","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"using NLMPCC as follows","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"nlp = NLMPCC(admpcc)","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"so that","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"cons(nlp, x)","category":"page"},{"location":"","page":"MPCC","title":"MPCC","text":"returns a vector consisting of [c(x), G(x), H(x), G(x) ∘ H(x)].","category":"page"},{"location":"#Contributors","page":"MPCC","title":"Contributors","text":"","category":"section"},{"location":"","page":"MPCC","title":"MPCC","text":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://tmigot.github.io\"><img src=\"https://avatars.githubusercontent.com/u/25304288?v=4?s=100\" width=\"100px;\" alt=\"Tangi Migot\"/><br /><sub><b>Tangi Migot</b></sub></a><br /><a href=\"#projectManagement-tmigot\" title=\"Project Management\">📆</a> <a href=\"#maintenance-tmigot\" title=\"Maintenance\">🚧</a> <a href=\"#doc-tmigot\" title=\"Documentation\">📖</a> <a href=\"#test-tmigot\" title=\"Tests\">⚠️</a> <a href=\"#code-tmigot\" title=\"Code\">💻</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->","category":"page"}]
}
